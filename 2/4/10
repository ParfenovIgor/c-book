<p>Интересно, и не очень красиво, обстоят дела с указателями-константами. Рассмотрим примеры: </p>

<pre><code class="language-cpp">int main() {
    const int *n;
    int m;
    n = &amp;m;
    
    return 0;
}</code></pre>

<p> <code>const int*</code> объявляет указатель, у которого нельзя менять содержимое. Мы изменить сам указатель (то есть, адрес, на который он указывает), но не можем изменить его содержимое <code>*n = 2</code>.</p>

<pre><code class="language-cpp">int main() {
    int *const n;
    *n = 2;
    
    return 0;
}</code></pre>

<p>Здесь обратная ситуация: <code>int *const</code> позволяет менять содержимое указателя, но не позволяет изменить сам указатель <code>n += 10</code>.</p>

<p>Рассмотрим немного комичный пример:</p>

<pre><code class="language-cpp">int main() {
    const int * *const *n;
    
    n += 2;
    // *n = 2;
    **n += 2;
    // ***n += 2;
    
    return 0;
}</code></pre>

<p>Закомментированные строки нарушают правила константности и вызывают ошибку компиляции.</p>