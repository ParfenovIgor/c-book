<p>Изучим алгоритм сортировки слиянием (Merge Sort).</p>

<pre><code class="language-cpp">void merge_sort(int *a, int l, int r) {
    if (r - l == 1) return;
    int m = (l + r) / 2;
    merge_sort(a, l, m);
    merge_sort(a, m, r);
    ...
}</code></pre>

<p>Данный алгоритм является рекурсивным. Он принимает сам массив и границы подотрезка, который данному рекурсивному вызову следует отсортировать. Если длина подотрезка равна <code>1</code>, то он уже отсортирован. Если это не так, то разделим подотрезок на два меньших подотрезка и вызовем <code>merge_sort</code> от каждого из них. В результате мы получим два отсортированных подотрезка. Их необходимо <em>слить</em> в один, после чего сортировка будет завершена.</p>

<p>Здесь я использовал полуинтервалы, то есть индекс <code>r</code> не входит в подотрезок, который необходимо отсортировать. При такой реализации нет необходимости добавлять <code>+1</code> и <code>-1</code> к различным индексам границ.</p>

<p>Реализуйте алгоритм слияния. Он должен по двум отсортированным подотрезкам <code>[l, m)</code> и <code>[m, r)</code> получить один отсортированный подотрезок <code>[l, r)</code>. Здесь <code>[]</code> означают границы включительно, а <code>()</code> — не включительно.</p>

<p>Дана последовательность целых чисел <span class="math-tex">\(a_1, a_2, \ldots, a_n\)</span> длины <span class="math-tex">\(n\)</span>. Отсортируйте заданную последовательность.</p>

<h4>Формат ввода</h4>

<p>Первая строка входных данных содержит одно целое число <span class="math-tex">\(n\)</span> (<span class="math-tex">\(1 \le n \le 10^3\)</span>)</p>

<p>Вторая строка входных данных <span class="math-tex">\(n\)</span> целых чисел <span class="math-tex">\(a_1, a_2, \ldots, a_n\)</span> (<span class="math-tex">\(1 \le a_i \le 10^6\)</span>)</p>

<h4>Формат вывода</h4>

<p>Выведите <span class="math-tex">\(n\)</span> целых чисел <span class="math-tex">\(b_1, b_2, \ldots, b_n\)</span> (<span class="math-tex">\(b_1 \le b_2 \le \ldots \le b_n\)</span>) — отсортированную последовательность <span class="math-tex">\(a\)</span>.</p>