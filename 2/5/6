<p>Следующая функция  <code>char* strtok( char* str, const char* delim );</code> более сложная в использовании. Эта функция используется для разбиения строки <code>str</code> на токены. Аргумент <code>delim</code> хранит символы-разделители токенов. Рассмотрим программу:</p>

<pre><code class="language-cpp">#include &lt;string.h&gt;

int main() {
    char str[] = "ab;cde,fghi";
    int n = strlen(str);
    
    char *a = strtok(str, ",;");
    printf("%d ", strlen(str));
    printf("%d ", strlen(a));
    
    char *b = strtok(NULL, ",;");
    printf("%d ", strlen(b));
    
    char *c = strtok(NULL, ",;");
    printf("%d ", strlen(c));

    char *d = strtok(NULL, ",;");
    printf("%d\n", d);

    int i;
    for (i = 0; i &lt;= n; i++) {
        if (str[i] == 0) {
            printf(".");
        }
        else {
            printf("%c", str[i]);
        }
    }
    printf("\n");
    
    return 0;
}</code></pre>

<p>Вывод этой программы:</p>

<pre><code class="language-no-highlight">2 2 3 4 0
ab.cde.fghi.</code></pre>

<p>Пусть разделителями будут символы <code>,</code> и <code>;</code>. Сначала выполним такой вызов функции: <code>strtok(str, ",;");</code>. В результате этого вызова вместо первого разделителя в изначальной строке <code>;</code> будет поставлен нулевой символ, будет возвращен указатель на первый символ, не являющийся разделителем (а наша строка не начинается с разделителей, поэтому будет возвращен <code>str</code>) , а внутри функции <code>strtok</code> будет неким образом создана запись о том, какой последний символ был обработан.</p>

<p>Затем выполним вызов <code>strtok(NULL, ",;");</code>. В результате этого вызова повторятся те же действия, но не с аргумента (который теперь просто <code>0</code>), а с последнего обработанного символа. Будет найден следующий разделительный символ <code>,</code> и заменен на нулевой символ. Затем будет возвращён указатель на символ <code>c</code>.</p>

<p>При выполнении третьего вызова разделительный символ не будет найден, но <code>strtok</code> всё равно вернёт указатель на начало последнего токена — символ <code>f</code>. Так как последний токен программы был считан, четвёртый вызов функции <code>strtok</code> вернёт ноль.</p>

<p>Для лучшего понимания посмотрите на конечное состояние массива <code>str</code>, в котором вместо каждого нулевого символа написан символ <code>.</code>. Все ненулевые значения, возвращённые функцией <code>strtok</code> указывают на этот массив.</p>

<p>Значение "переменной" (что это такое, узнаем чуть позже) <code>NULL</code> равно нулю. (Вы можете вместо <code>NULL</code> везде написать <code>0</code>.) Также здесь нам необходимо добавить <code>string.h</code>.</p>